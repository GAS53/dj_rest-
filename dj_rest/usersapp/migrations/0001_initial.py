# Generated by Django 4.0.6 on 2022-08-07 15:22

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким именем уже существует.'}, help_text='64 символа латиницей. Буквы, цифры и @/./+/-/_ .', max_length=64, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(max_length=64, verbose_name='имя')),
                ('last_name', models.CharField(max_length=64, verbose_name='фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_admin', models.BooleanField(default=False, help_text='Администрирует сайт', verbose_name='Администратор проектов')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Менеджер')),
                ('is_developer', models.BooleanField(default=False, verbose_name='Разработчик')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Персонал')),
                ('is_active', models.BooleanField(default=True, help_text='Для использования сайта пользователь должен быть активным. выбрать это вместо удаления аккаунта.', verbose_name='активный')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
